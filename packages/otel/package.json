{
  "name": "@mwcp/otel",
  "author": "waiting",
  "version": "39.0.2",
  "description": "midway component for open telemetry",
  "keywords": [
    "midway",
    "IoC",
    "plugin",
    "apm",
    "jaeger",
    "tracing",
    "open-tracing",
    "open-telemetry",
    "ts"
  ],
  "type": "module",
  "bin": {},
  "types": "dist/index.d.ts",
  "imports": {
    "#package.json": "./package.json",
    "##/*": "./src/*",
    "#@/*": "./test/*"
  },
  "exports": {
    ".": "./dist/index.js",
    "./package.json": "./package.json"
  },
  "bugs": {
    "url": "https://github.com/waitingsong/midway-components/issues"
  },
  "homepage": "https://github.com/waitingsong/midway-components/tree/main/packages/otel#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/waitingsong/midway-components"
  },
  "license": "MIT",
  "dependencies": {
    "@mwcp/share": "^39.0.0",
    "@opentelemetry/resource-detector-alibaba-cloud": "^0.29.4",
    "@opentelemetry/resource-detector-aws": "^1.7.0",
    "@opentelemetry/resource-detector-container": "^0.5.0",
    "@opentelemetry/resource-detector-gcp": "^0.29.13",
    "@opentelemetry/sdk-node": "^0.54.0",
    "@waiting/shared-core": "^23.22.0",
    "undici": "*"
  },
  "devDependencies": {
    "@midwayjs/grpc": "^3.18.2",
    "@midwayjs/grpc-helper": "^1.1.0"
  },
  "engines": {
    "node": ">=18.12.0",
    "@midwayjs/core": ">=3.16.0"
  },
  "files": [
    "README.*.md",
    "Dockerfile",
    "npm-shrinkwrap.json",
    "tsconfig.json",
    "tsconfig.base.json",
    "asset",
    "bin",
    "database",
    "dist",
    "src",
    "!**/*.spec.*"
  ],
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "build": "npm run tsc && tsc-alias",
    "build:unit": "tsc -p test/tsconfig.json",
    "clean": "npm run clean:lock && npm run clean:dist && npm run clean:log",
    "clean:cache": "rm -rf .eslintcache .tsbuildinfo",
    "clean:dist": "npm run clean:cache && rm -rf dist/*",
    "clean:lock": "rm -f package-lock.json",
    "clean:log": "rm -rf ./logs ./run",
    "cov": "c8 --all npm run test -- --parallel=false",
    "db:gen": "kmore gen --path ./src",
    "dev": "cross-env MIDWAY_SERVER_ENV=local mwtsc --watch --run @midwayjs/mock/app",
    "lint": "eslint --fix --cache src test",
    "lint:nofix": "eslint --cache src test",
    "predev": "npm run build && npm run prepareShare",
    "pretest": "npm run test:tsproto && npm run build:unit && npm run prepareShare",
    "prepareShare": "tsx test/prepare.mts",
    "start": "cross-env NODE_ENV=production node ./bootstrap.js",
    "test": "cross-env MIDWAY_SERVER_ENV=unittest TS_NODE_PROJECT=test/tsconfig.json mocha --parallel=false",
    "test:deb": "npm run test",
    "test:tsproto": "tsproto --path test/grpc --output test/domain && eslint --fix --cache test/domain",
    "tsc": "tsc -b"
  }
}
